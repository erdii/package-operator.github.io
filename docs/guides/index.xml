<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on</title><link>https://package-operator.run/docs/guides/</link><description>Recent content in Guides on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://package-operator.run/docs/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Packaging an Application</title><link>https://package-operator.run/docs/guides/packaging-an-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://package-operator.run/docs/guides/packaging-an-application/</guid><description>Objectives # Create a manifest.yaml file Add annotations to Kubernetes object manifest files to specify phase Package all files in a Containerfile Build the image Before you begin # This guide assumes you have all the required software installed and have a Kubernetes cluster with Package Operator installed.
Application # The application is a simple nginx webserver deployment. The deployment should also be run in its own namespace, called nginx. The manifests for these two resources are as follows:</description></item><item><title>Installing Packages</title><link>https://package-operator.run/docs/guides/installing-packages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://package-operator.run/docs/guides/installing-packages/</guid><description>Objectives # Create a package object manifest Deploy the package object Before you begin # This guide assumes there is already an image for the given package. If not, the Packaging an Application or the Packaging an Operator guide show how to package an application or an operator respectfully.
(Cluster)Package Object Manifest # The (Cluster)Package API is used to load package container images into a cluster.
The ClusterPackage API is used for packages that have Cluster in their defined scopes and the Package API is used for packages that have Namespaced in their defined scopes.</description></item><item><title>Packaging an Operator</title><link>https://package-operator.run/docs/guides/packaging-an-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://package-operator.run/docs/guides/packaging-an-operator/</guid><description>Objectives # Create a manifest.yaml file Add annotations to Kubernetes object manifest files to specify phase Package all files in a Containerfile Build the image Before you begin # This guide assumes you have all the required software installed and have a Kubernetes cluster with Package Operator installed.
Usually a Kubernetes operator will consist of CRDs and the operator deployment. Because the operator watches the CRDs, the CRDs have to be deployed before the operator deployment.</description></item></channel></rss>