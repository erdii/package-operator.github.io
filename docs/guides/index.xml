<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides on</title><link>https://package-operator.run/docs/guides/</link><description>Recent content in Guides on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://package-operator.run/docs/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Packaging an Application</title><link>https://package-operator.run/docs/guides/packaging-an-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://package-operator.run/docs/guides/packaging-an-application/</guid><description>In this guide, you will deploy a simple nginx web server, using the Package Operator - Package API.
During this guide you will:
Create a manifest.yaml file Assign Kubernetes objects to PKO phases Take advantage of templates Setup test cases for templates Build and Validate the Package Operator package To complete this guide you will need:
A Kubernetes cluster with Package Operator installed The kubectl-package CLI plugin A container-registry to push images to</description></item><item><title>Packaging an Operator</title><link>https://package-operator.run/docs/guides/packaging-an-operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://package-operator.run/docs/guides/packaging-an-operator/</guid><description>This guide extends on Packaging an Application, with the goal to package and deploy an Kubernetes Operator using the Package Operator - ClusterPackage API.
During this guide you will:
Create a manifest.yaml file Use multiple PKO phases Build and Validate the Package Operator package To complete this guide you will need:
A Kubernetes cluster with Package Operator installed The kubectl-package CLI plugin A container-registry to push images to
(optional when using tars and kind load) All files used during this guide are available in the package-operator/examples repository.</description></item><item><title>Working with image digests</title><link>https://package-operator.run/docs/guides/image-digests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://package-operator.run/docs/guides/image-digests/</guid><description>This guide explains how to leverage the automatic image digest resolution feature when creating a Package, which allows the creator to easily replace the image tags with their respective digests inside the packaged resources.
This enables a stricter control over which images will be included in the package, since the digest is the ultimate way to uniquely identify an image, while the tag can identify different ones over time (think of latest that gets updated every time).</description></item></channel></rss>